# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Lenguage {
  id: ID!
  name: String!
  eslogan_atractivo: String
  descripcion_corta: String
  descripcion_completa: String
  nivel: String
  duracion_total_horas: Int
  color_tema: String
  icono_curso: String
  imagen_hero: String
  badge_destacado: String
  idioma_origen: String
  idioma_destino: String
  certificado_digital: Boolean!
  puntuacion_promedio: Float!
  total_estudiantes_inscritos: Int!
  estado: String!
  featured: Boolean!
  fecha_creacion: String!
  fecha_actualizacion: String!
  icons: [String!]
  isActive: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Level {
  id: ID!
  name: String!
  description: String!
  isCompleted: Boolean!
  percentaje: Int!
  qualification: Int!
  createdAt: String!
  updatedAt: String!
  userId: Int!
  isActive: Boolean!
  difficulty: String!
  lenguageId: ID
  lenguage: Lenguage
}

type User {
  id: ID!
  fullName: String!
  email: String!
  roles: [String!]!
  isActive: Boolean!
  assignedLanguageId: ID
  assignedLanguage: Lenguage
  assignedLanguages: [Lenguage!]
  lastUpdateBy: User
}

type PaginatedLevels {
  levels: [Level!]!
  total: Int!
  page: Int!
  limit: Int!
  totalPages: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Skill {
  id: ID!
  name: String!
  description: String!
  color: String!
  imageUrl: String
  icon: String
  objectives: String
  prerequisites: String
  difficulty: String!
  estimatedHours: Int
  tags: [String!]!
  isActive: Boolean!
  levelId: ID
  level: Level
  lenguageId: ID
  lenguage: Lenguage
  createdAt: String!
  updatedAt: String!
}

type Content {
  id: ID!
  name: String!
  description: String!
  isCompleted: Boolean!
  createdAt: String!
  updatedAt: String!
  levelId: ID!
  userId: Int!
  markdownPath: String
  assignedTeachers: [User!]
  validationStatus: String!
  publishedAt: String
  skill: Skill
  skillId: ID
}

type PaginatedContents {
  contents: [Content!]!
  total: Int!
  page: Int!
  limit: Int!
  totalPages: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type PaginatedSkills {
  skills: [Skill!]!
  total: Int!
  page: Int!
  limit: Int!
  totalPages: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Activity {
  id: ID!
  name: String!
  description: String!
  indication: String!
  example: String!
  contentId: ID!
  createdAt: String!
  updatedAt: String!
  userId: Int!
}

type Homework {
  id: ID!
  name: String!
  exercise: String!
  correctAnswer: String!
  activityId: ID!
  createdAt: String!
  updatedAt: String!
  userId: Int!
}

type PaginatedUsers {
  users: [User!]!
  total: Int!
  page: Int!
  limit: Int!
  totalPages: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type AuthResponse {
  token: String!
  user: User!
}

type PaginatedLenguages {
  lenguages: [Lenguage!]!
  total: Int!
  page: Int!
  limit: Int!
  totalPages: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Query {
  levels: [Level!]!
  levelsPaginated(search: String, page: Int = 1, limit: Int = 5, isActive: Boolean, lenguageId: ID, difficulty: String): PaginatedLevels!
  level(id: ID!): Level!
  levelsByLenguage(lenguageId: ID!): [Level!]!
  contentsByLevelPublic(levelId: ID!): [Content!]!
  contentsBySkillPublic(skillId: ID!): [Content!]!
  contentsByLevelAndSkillPublic(levelId: ID!, skillId: ID!): [Content!]!
  contentMarkdownPublic(contentId: ID!): String!
  contents: [Content!]!
  contentsPaginated(search: String, levelId: String, skillId: String, validationStatus: String, page: Int! = 1, limit: Int! = 5): PaginatedContents!
  contentsByLevel(levelId: ID!): [Content!]!
  contentsByTeacher(teacherId: ID!): [Content!]!
  contentsBySkill(skillId: ID!): [Content!]!
  contentsByLevelAndSkill(levelId: ID!, skillId: ID!): [Content!]!
  myAssignedContents: [Content!]!
  content(id: ID!): Content!
  contentMarkdown(contentId: ID!): String!
  validatedContentsByLevel(levelId: ID!): [Content!]!
  validatedContentsBySkill(skillId: ID!): [Content!]!
  validatedContentsByLevelAndSkill(levelId: ID!, skillId: ID!): [Content!]!
  skillsActivePublic: [Skill!]!
  skillsByLevelPublic(levelId: ID!): [Skill!]!
  skillPublic(id: ID!): Skill!
  skills: [Skill!]!
  skillsActive: [Skill!]!
  skill(id: ID!): Skill!
  skillsByLevel(levelId: ID!): [Skill!]!
  skillsByLanguage(lenguageId: ID!): [Skill!]!
  skillsPaginated(search: String, page: Int = 1, limit: Int = 10, isActive: Boolean, levelId: ID, lenguageId: ID): PaginatedSkills!
  activities: [Activity!]!
  activitiesByContent(contentId: ID!): [Activity!]!
  activity(id: ID!): Activity!
  homeworks: [Homework!]!
  homework(id: Int!): Homework!
  users(roles: [ValidRoles!] = []): [User!]!
  usersPaginated(roles: [ValidRoles!] = [], search: String, page: Int = 1, limit: Int = 10, assignedLanguageId: ID): PaginatedUsers!
  user(id: ID!): User!
  revalidate: AuthResponse!
  lenguages: [Lenguage!]!
  lenguagesActivate: [Lenguage!]!
  lenguagesFeatured: [Lenguage!]!
  lenguagesByNivel(nivel: String!): [Lenguage!]!
  lenguagesPaginated(search: String, page: Int = 1, limit: Int = 5, isActive: Boolean): PaginatedLenguages!
  lenguage(id: ID!): Lenguage!
}

enum ValidRoles {
  superUser
  admin
  docente
  alumno
  mortal
}

type Mutation {
  createLevel(createLevelInput: CreateLevelInput!): Level!
  updateLevel(updateLevelInput: UpdateLevelInput!): Level!
  removeLevel(id: ID!): Level!
  createContent(createContentInput: CreateContentInput!): Content!
  updateContent(updateContentInput: UpdateContentInput!): Content!
  assignTeachersToContent(contentId: ID!, teacherIds: [ID!]!): Content!
  removeTeacherFromContent(contentId: ID!, teacherId: ID!): Content!
  removeContent(id: ID!): Content!
  updateContentMarkdown(contentId: ID!, markdownContent: String!): Boolean!
  validateContent(contentId: ID!): Content!
  invalidateContent(contentId: ID!): Content!
  validateAllContent: String!
  convertDocxToMarkdown(contentId: ID!, docxBase64: String!): Boolean!
  createSkill(createSkillInput: CreateSkillInput!): Skill!
  updateSkill(updateSkillInput: UpdateSkillInput!): Skill!
  removeSkill(id: ID!): Skill!
  toggleSkillActive(id: ID!): Skill!
  createActivity(createActivityInput: CreateActivityInput!): Activity!
  updateActivity(updateActivityInput: UpdateActivityInput!): Activity!
  removeActivity(id: ID!): Activity!
  createHomework(createHomeworkInput: CreateHomeworkInput!): Homework!
  updateHomework(updateHomeworkInput: UpdateHomeworkInput!): Homework!
  removeHomework(id: Int!): Homework!
  blockUser(id: ID!): User!
  updateUserRoles(updateUserRolesInput: UpdateUserRolesInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  assignLanguageToUser(assignLanguageInput: AssignLanguageInput!): User!
  assignMultipleLanguagesToUser(assignMultipleLanguagesInput: AssignMultipleLanguagesInput!): User!
  assignAdminLanguageToTeacher(teacherId: ID!): User!
  signin(signUpInput: SignupInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!
  createLenguage(createLenguageInput: CreateLenguageInput!): Lenguage!
  updateLenguage(updateLenguageInput: UpdateLenguageInput!): Lenguage!
  removeLenguage(id: ID!): Lenguage!
}

input CreateLevelInput {
  name: String!
  description: String!
  difficulty: String = "BÃ¡sico"
  lenguageId: ID!
  isActive: Boolean = true
}

input UpdateLevelInput {
  id: ID!
  name: String
  description: String
  difficulty: String
  lenguageId: ID
  isActive: Boolean
}

input CreateContentInput {
  name: String!
  description: String!
  levelId: ID!
  teacherIds: [ID!]
  validationStatus: String
  skillId: ID
}

input UpdateContentInput {
  name: String
  description: String
  levelId: ID
  teacherIds: [ID!]
  validationStatus: String
  skillId: ID
  id: ID!
}

input CreateSkillInput {
  name: String!
  description: String!
  color: String
  imageUrl: String
  icon: String
  objectives: String
  prerequisites: String
  difficulty: String
  estimatedHours: Int
  tags: [String!]
  levelId: ID
  lenguageId: ID
}

input UpdateSkillInput {
  name: String
  description: String
  color: String
  imageUrl: String
  icon: String
  objectives: String
  prerequisites: String
  difficulty: String
  estimatedHours: Int
  tags: [String!]
  levelId: ID
  lenguageId: ID
  id: ID!
}

input CreateActivityInput {
  name: String!
  description: String!
  indication: String!
  example: String!
  contentId: ID!
}

input UpdateActivityInput {
  name: String
  description: String
  indication: String
  example: String
  contentId: ID
  id: ID!
}

input CreateHomeworkInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateHomeworkInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateUserRolesInput {
  id: ID!
  roles: [ValidRoles!]!
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: ID!
  fullName: String
  email: String
  password: String
}

input AssignLanguageInput {
  userId: ID!
  languageId: ID
}

input AssignMultipleLanguagesInput {
  userId: ID!
  languageIds: [ID!]
}

input SignupInput {
  email: String!
  fullName: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateLenguageInput {
  name: String!
  eslogan_atractivo: String
  descripcion_corta: String
  descripcion_completa: String
  nivel: String
  duracion_total_horas: Int
  color_tema: String
  icono_curso: String
  imagen_hero: String
  badge_destacado: String
  idioma_origen: String
  idioma_destino: String
  certificado_digital: Boolean! = false
  puntuacion_promedio: Float! = 0
  total_estudiantes_inscritos: Int! = 0
  estado: String! = "Activo"
  featured: Boolean! = false
  icons: [String!]
  isActive: Boolean! = true
}

input UpdateLenguageInput {
  name: String
  eslogan_atractivo: String
  descripcion_corta: String
  descripcion_completa: String
  nivel: String
  duracion_total_horas: Int
  color_tema: String
  icono_curso: String
  imagen_hero: String
  badge_destacado: String
  idioma_origen: String
  idioma_destino: String
  certificado_digital: Boolean
  puntuacion_promedio: Float
  total_estudiantes_inscritos: Int
  estado: String
  featured: Boolean
  icons: [String!]
  isActive: Boolean = true
  id: ID!
  dificultad: Int
}