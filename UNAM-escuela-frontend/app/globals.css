@import "tailwindcss";
@config "../tailwind.config.js";
@plugin '../hero.ts';
@source '../node_modules/@heroui/theme/dist/**/*.{js,ts,jsx,tsx}';

/* Asegurar que todos los elementos se adapten a los temas */
@layer base {
  html,
  body {
    @apply bg-background text-foreground;
  }

  /* Asegurar que elementos predeterminados usen los colores del tema */
  input,
  textarea,
  select {
    @apply bg-background text-foreground border-divider;
  }

  /* Botones predeterminados */
  button:not(.heroui-button) {
    @apply bg-primary text-primary-foreground;
  }

  /* Enlaces predeterminados */
  a {
    @apply text-foreground hover:text-primary;
  }

  /* Placeholder text */
  ::placeholder {
    @apply text-foreground/50;
  }

  /* Remover shadows de modales */
  [data-slot="base"] {
    box-shadow: none !important;
  }

  [data-slot="wrapper"] {
    box-shadow: none !important;
  }

  [data-slot="close-button"] {
    background: transparent !important;
    box-shadow: none !important;
    border: none !important;
    color: hsl(var(--heroui-foreground)) !important;
    opacity: 0.7 !important;
    transition: all 0.2s ease-in-out !important;
    border-radius: 8px !important;
    width: 32px !important;
    height: 32px !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
  }

  [data-slot="close-button"]:hover {
    background: hsl(var(--heroui-default-100)) !important;
    opacity: 1 !important;
    transform: scale(1.05) !important;
  }

  [data-slot="close-button"]:focus,
  [data-slot="close-button"]:focus-visible {
    outline: 2px solid hsl(var(--heroui-primary)) !important;
    outline-offset: 2px !important;
    background: hsl(var(--heroui-default-100)) !important;
  }

  /* Icono dentro del botón de cerrar */
  [data-slot="close-button"] svg {
    color: hsl(var(--heroui-foreground)) !important;
    width: 18px !important;
    height: 18px !important;
  }

  /* Remover shadows específicamente de todos los elementos de modal */
  .heroui-modal,
  .heroui-modal *,
  .heroui-card,
  .heroui-card * {
    box-shadow: none !important;
    -webkit-box-shadow: none !important;
    -moz-box-shadow: none !important;
  }

  /* Asegurar que no haya shadows en elementos con data-focus */
  [data-focus="true"],
  [data-focus-visible="true"] {
    box-shadow: none !important;
  }

  /* Remover colores azules del toggle del navbar móvil */
  [data-slot="toggle"],
  .heroui-navbar-toggle,
  button[aria-label*="menú"],
  button[aria-label*="menu"] {
    color: hsl(var(--heroui-foreground)) !important;
    background: transparent !important;
    background-color: transparent !important;
    border: none !important;
  }

  [data-slot="toggle"]:hover,
  .heroui-navbar-toggle:hover,
  button[aria-label*="menú"]:hover,
  button[aria-label*="menu"]:hover {
    color: hsl(var(--heroui-default-700)) !important;
    background: transparent !important;
    background-color: transparent !important;
  }

  /* Remover focus ring azul del toggle */
  [data-slot="toggle"]:focus,
  [data-slot="toggle"]:focus-visible,
  .heroui-navbar-toggle:focus,
  .heroui-navbar-toggle:focus-visible,
  button[aria-label*="menú"]:focus,
  button[aria-label*="menu"]:focus {
    outline: none !important;
    box-shadow: none !important;
    background: transparent !important;
    background-color: transparent !important;
  }

  /* Forzar transparencia en todos los estados del toggle */
  [data-slot="toggle"][data-pressed="true"],
  [data-slot="toggle"][data-focus="true"],
  [data-slot="toggle"][data-focus-visible="true"] {
    background: transparent !important;
    background-color: transparent !important;
  }

  /* Custom Scrollbar Styles */
  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 4px;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 4px;
    border: 1px solid #e2e8f0;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }

  /* Firefox scrollbar */
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: #cbd5e1 #f1f5f9;
  }

  /* Forzar colores correctos SOLO en dropdowns específicos que lo necesiten */
  /* Remover reglas globales para permitir estilos por defecto en todos los componentes */

  /* Solo aplicar texto adaptativo a dropdowns específicos usando clases personalizadas */
  .dropdown-white-text * {
    color: hsl(var(--heroui-foreground)) !important;
  }

  /* Usar colores nativos del tema para content1 (dropdowns) */
  .dropdown-white-text [data-slot="content"] {
    background-color: hsl(var(--heroui-content1)) !important;
    color: hsl(var(--heroui-foreground)) !important;
  }

  /* Hover en tema oscuro - usar data-hover oficial de HeroUI para mejor compatibilidad */
  .dark .dropdown-white-text [data-slot="base"][data-hover="true"],
  html.dark .dropdown-white-text [data-slot="base"][data-hover="true"],
  .dark .dropdown-white-text [data-hover="true"] {
    background-color: #dbeafe !important; /* azul clarito */
    color: #1f2937 !important; /* texto oscuro para contraste */
    transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;
  }

  /* Asegurar que todos los elementos hijos también tengan el texto oscuro en hover */
  .dark .dropdown-white-text [data-slot="base"][data-hover="true"] *,
  html.dark .dropdown-white-text [data-slot="base"][data-hover="true"] *,
  .dark .dropdown-white-text [data-hover="true"] * {
    color: #1f2937 !important; /* texto oscuro para contraste con fondo azul */
  }

  /* Asegurar que iconos también se vean bien con data-hover */
  .dark .dropdown-white-text [data-hover="true"] svg,
  .dark .dropdown-white-text [data-slot="base"][data-hover="true"] svg {
    color: #1f2937 !important; /* iconos oscuros para contraste */
  }

  /* Reglas de respaldo para elementos sin data-hover (compatibilidad) */
  .dark .dropdown-white-text li:hover,
  .dark .dropdown-white-text button:hover {
    background-color: #dbeafe !important; /* azul clarito */
    color: #1f2937 !important; /* texto oscuro */
    transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;
  }

  .dark .dropdown-white-text li:hover *,
  .dark .dropdown-white-text button:hover * {
    color: #1f2937 !important; /* texto oscuro */
  }
}

/* Asegurar que ScrollShadow no tenga padding interno */
[data-slot="base"] {
  padding: 0 !important;
}

/* Eliminar cualquier padding de HeroUI ScrollShadow */
.heroui-scroll-shadow-base {
  padding: 0 !important;
}

/* Estilos para el divisor redimensionable */
.resizer-dragging {
  user-select: none !important;
}

.resizer-dragging * {
  user-select: none !important;
  pointer-events: none !important;
}

/* Cursor personalizado durante el arrastre - más sutil */
body.resizing {
  cursor: col-resize !important;
  user-select: none !important;
}

/* Adaptar icono del selector al color del tema - Reglas más específicas */
[data-slot="selectorIcon"] svg,
[data-slot="selectorIcon"] path,
.w-full [data-slot="selectorIcon"] svg,
.w-full [data-slot="selectorIcon"] path,
[class*="heroui"] [data-slot="selectorIcon"] svg,
[class*="heroui"] [data-slot="selectorIcon"] path {
  color: hsl(var(--heroui-foreground)) !important;
  fill: hsl(var(--heroui-foreground)) !important;
  stroke: hsl(var(--heroui-foreground)) !important;
}

[data-slot="selectorIcon"],
.w-full [data-slot="selectorIcon"],
[class*="heroui"] [data-slot="selectorIcon"] {
  color: hsl(var(--heroui-foreground)) !important;
}

/* Reglas específicas por tema para mayor compatibilidad */
.light [data-slot="selectorIcon"] svg,
.light [data-slot="selectorIcon"] path,
html.light [data-slot="selectorIcon"] svg,
html.light [data-slot="selectorIcon"] path {
  color: #000000 !important;
  fill: #000000 !important;
  stroke: #000000 !important;
}

.dark [data-slot="selectorIcon"] svg,
.dark [data-slot="selectorIcon"] path,
html.dark [data-slot="selectorIcon"] svg,
html.dark [data-slot="selectorIcon"] path {
  color: #ffffff !important;
  fill: #ffffff !important;
  stroke: #ffffff !important;
}

.contraste [data-slot="selectorIcon"] svg,
.contraste [data-slot="selectorIcon"] path,
html.contraste [data-slot="selectorIcon"] svg,
html.contraste [data-slot="selectorIcon"] path {
  color: #ffff00 !important;
  fill: #ffff00 !important;
  stroke: #ffff00 !important;
}

/* Asegurar que el valor seleccionado sea visible */
[data-slot="value"],
.w-full [data-slot="value"],
[class*="heroui"] [data-slot="value"] {
  color: hsl(var(--heroui-foreground)) !important;
  opacity: 1 !important;
}

/* Específico para selects que no muestran valor seleccionado */
[data-slot="trigger"] [data-slot="value"],
[data-slot="trigger"] .flex.items-center.gap-2 {
  color: hsl(var(--heroui-foreground)) !important;
  opacity: 1 !important;
  display: flex !important;
  visibility: visible !important;
}

/* Reglas específicas para valores de Select - forzar visibilidad */
.heroui-select [data-slot="value"],
[data-component="select"] [data-slot="value"],
select [data-slot="value"] {
  opacity: 1 !important;
  color: hsl(var(--heroui-foreground)) !important;
  display: block !important;
  visibility: visible !important;
}

/* Asegurar que el contenido del renderValue sea visible */
.heroui-select [data-slot="value"] > *,
[data-component="select"] [data-slot="value"] > *,
select [data-slot="value"] > * {
  opacity: 1 !important;
  color: inherit !important;
  display: flex !important;
  align-items: center !important;
  gap: 0.5rem !important;
}

/* Forzar display para valores en Select específicamente */
[aria-haspopup="listbox"] [data-slot="value"],
[role="combobox"] [data-slot="value"] {
  opacity: 1 !important;
  color: hsl(var(--heroui-foreground)) !important;
  display: flex !important;
  align-items: center !important;
  visibility: visible !important;
}

/* Específico para el modal de cambio de rol */
[data-slot="trigger"]:has([data-slot="value"]) {
  color: hsl(var(--heroui-foreground)) !important;
}

/* Asegurar que placeholder y value no se confundan */
[data-slot="value"]:not(:empty) {
  opacity: 1 !important;
  display: flex !important;
}

[data-slot="value"]:empty + [data-slot="placeholder"] {
  opacity: 0.5 !important;
}

/* Forzar visibilidad del valor seleccionado en selects específicamente */
[data-slot="trigger"] [data-slot="value"]:not(:empty),
[role="combobox"] [data-slot="value"]:not(:empty) {
  opacity: 1 !important;
  display: flex !important;
  align-items: center !important;
  color: hsl(var(--heroui-foreground)) !important;
  font-weight: 400 !important;
  min-height: 1rem !important;
}

/* Asegurar que el renderValue tenga prioridad sobre placeholder */
[data-slot="value"] > div.flex.items-center.gap-2 {
  opacity: 1 !important;
  display: flex !important;
  align-items: center !important;
  color: hsl(var(--heroui-foreground)) !important;
}

/* Forzar colores en elementos de renderValue */
[data-slot="value"] > div.flex.items-center.gap-2 > span,
[data-slot="value"] > div.flex.items-center.gap-2 > svg {
  color: hsl(var(--heroui-foreground)) !important;
  opacity: 1 !important;
}

/* Ocultar placeholder cuando hay valor */
[data-slot="trigger"]:has([data-slot="value"]:not(:empty))
  [data-slot="placeholder"] {
  display: none !important;
}
