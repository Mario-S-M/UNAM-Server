services:
  db:
    image: postgres:14.4
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-produccion}
    ports:
      - "5432:5432"
    volumes:
      - ./DB/postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-produccion}",
        ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 30s
    networks:
      - unam-net

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - unam-net
  backend:
    build:
      context: ./UNAM-escuela-backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-produccion}
      NODE_ENV: production
    env_file:
      - .env
    ports:
      - "11434:3000" # Fixed port mapping: host:container
    networks:
      - unam-net
    restart: unless-stopped

  frontend:
    build:
      context: ./UNAM-escuela-frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: http://132.247.186.91:11434
        NEXT_PUBLIC_GRAPHQL_ENDPOINT: http://132.247.186.91:11434/graphql
    environment:
      NODE_ENV: production
      # Para producción, el frontend necesita usar la IP pública del servidor
      NEXT_PUBLIC_BACKEND_URL: http://132.247.186.91:11434
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: http://132.247.186.91:11434/graphql
    env_file:
      - .env
    ports:
      - "80:3000"
    depends_on:
      - backend
    networks:
      - unam-net

networks:
  unam-net:
    driver: bridge
